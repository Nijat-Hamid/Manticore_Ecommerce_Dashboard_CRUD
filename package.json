{
  "name": "vite-core",
  "private": true,
  "version": "0.3.0",
  "type": "module",
  "scripts": {
    "dev": "vite",
    "build": "vite build",
    "preview": "vite preview"
  },
  "dependencies": {
    "@chakra-ui/react": "^2.5.0",
    "@emotion/react": "^11.10.6",
    "@emotion/styled": "^11.10.6",
    "@fontsource/poppins": "^4.5.10",
    "@reduxjs/toolkit": "^1.9.3",
    "axios": "^1.3.4",
    "chart.js": "^4.2.1",
    "file-saver": "^2.0.5",
    "firebase": "^9.18.0",
    "formik": "^2.2.9",
    "framer-motion": "^10.6.0",
    "react": "^18.2.0",
    "react-chartjs-2": "^5.2.0",
    "react-dom": "^18.2.0",
    "react-dotenv": "^0.1.3",
    "react-icons": "^4.8.0",
    "react-redux": "^8.0.5",
    "react-router-dom": "^6.9.0"
  },
  "devDependencies": {
    "@faker-js/faker": "^7.6.0",
    "@nabla/vite-plugin-eslint": "^1.5.0",
    "@types/react": "^18.0.28",
    "@types/react-dom": "^18.0.11",
    "@vitejs/plugin-react-swc": "^3.2.0",
    "autoprefixer": "^10.4.14",
    "eslint-plugin-import": "^2.27.5",
    "eslint-plugin-jsx-a11y": "^6.7.1",
    "eslint-plugin-react": "^7.32.2",
    "eslint-plugin-react-hooks": "^4.6.0",
    "eslint-plugin-unicorn": "^46.0.0",
    "vite": "^4.2.0",
    "vite-plugin-mkcert": "^1.13.3"
  },
  "browserslist": [
    ">0.3%",
    "defaults",
    "supports es6-module",
    "maintained node versions"
  ],
  "postcss": {
    "map": true,
    "plugins": {
      "autoprefixer": {}
    }
  },
  "eslintConfig": {
    "root": true,
    "env": {
      "browser": true,
      "es2022": true,
      "jest": true,
      "node": true
    },
    "plugins": [
      "react",
      "react-hooks",
      "jsx-a11y",
      "unicorn",
      "eslint-plugin-import"
    ],
    "settings": {
      "react": {
        "version": "detect"
      }
    },
    "extends": [
      "plugin:import/recommended",
      "plugin:react/recommended",
      "plugin:react/jsx-runtime",
      "plugin:react-hooks/recommended",
      "plugin:jsx-a11y/recommended",
      "plugin:unicorn/recommended"
    ],
    "rules": {
      "react-hooks/rules-of-hooks": "error",
      "react-hooks/exhaustive-deps": "warn",
      "no-unused-vars": "warn",
      "jsx-a11y/label-has-associated-control": "warn",
      "no-unreachable-loop": "error",
      "no-void": "off",
      "react/prop-types": "off",
      "no-restricted-syntax": [
        "error",
        {
          "selector": "ForInStatement",
          "message": "for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array."
        },
        {
          "selector": "LabeledStatement",
          "message": "Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand."
        },
        {
          "selector": "WithStatement",
          "message": "`with` is disallowed in strict mode because it makes code impossible to predict and optimize."
        }
      ],
      "jsx-quotes": [
        "error",
        "prefer-double"
      ],
      "unicorn/filename-case": [
        "error",
        {
          "cases": {
            "camelCase": true,
            "pascalCase": true
          }
        }
      ],
      "react/jsx-key": "error",
      "import/named": 2,
      "import/namespace": 2,
      "import/default": 2,
      "import/export": 2,
      "import/no-unresolved": [
        2,
        {
          "commonjs": true,
          "amd": true
        }
      ]
    },
    "parserOptions": {
      "ecmaFeatures": {
        "jsx": true,
        "modules": true
      },
      "ecmaVersion": "latest",
      "sourceType": "module"
    }
  },
  "eslintIgnore": [
    "node_modules",
    "dist",
    "dist-ssr",
    "node_modules/*",
    "build"
  ]
}
